{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"name":"brain_cancer_stages","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPF1WXFfPtw4OxLJT7EiX5p"},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"P-OruA0AUUSo","executionInfo":{"status":"error","timestamp":1623122735352,"user_tz":-330,"elapsed":446,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"}},"outputId":"28a5b66d-d726-4ee7-e359-a6763e478748"},"source":["import tensorflow as tf \n","\n","#device_name = tf.test.gpu_device_name()\n","\n","if device_name != \"/device:GPU:0\":\n","    raise SystemError(\"GPU device not found\")\n","\n","print(f\"Found GPU at: {device_name}\")"],"execution_count":2,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-63f2dbfd1a48>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m#device_name = tf.test.gpu_device_name()\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0;32mif\u001b[0m \u001b[0mdevice_name\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"/device:GPU:0\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m     \u001b[0;32mraise\u001b[0m \u001b[0mSystemError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"GPU device not found\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'device_name' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XdEOr_ezgPiq","executionInfo":{"status":"ok","timestamp":1623122770153,"user_tz":-330,"elapsed":25141,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"}},"outputId":"b5076acb-c9ae-4207-e993-93dc570dad49"},"source":["from google.colab import drive,files\n","drive.mount('/content/MyDrive/') \n"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Mounted at /content/MyDrive/\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"EOxCzo4ugg5W"},"source":["%cd '/content/MyDrive/My Drive/sports_video_classification/'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GEr0XfhBgr2l"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qWMJ_QPlmLWp"},"source":["from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","from tensorflow.keras.optimizers import Adam\n","from sklearn.model_selection import train_test_split\n","from tensorflow.keras.preprocessing.image import img_to_array\n","from tensorflow.keras.utils import to_categorical\n","from model.lenet import LeNet\n","from imutils import paths\n","import matplotlib.pyplot as plt             #imports\n","import numpy as np\n","import argparse\n","import random\n","import cv2\n","import os"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mS_2zbreg8Rg"},"source":["EPOCHS=150\n","INIT_LR= 1e-3\n","BS=25"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pi6ABo6_hLfJ","executionInfo":{"elapsed":627,"status":"ok","timestamp":1622094031612,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"},"user_tz":-330},"outputId":"d1593483-a457-4a1d-8d80-5993a2759d03"},"source":["print(\"[INFO] Loading Images......\")\n","data=[]\n","labels=[]   #creat two list "],"execution_count":null,"outputs":[{"output_type":"stream","text":["[INFO] Loading Images......\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-tTLsxBIhksO","executionInfo":{"elapsed":4608,"status":"ok","timestamp":1622094049846,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"},"user_tz":-330},"outputId":"09c13f72-6dcd-43ad-83a7-fbec0f0a4224"},"source":["#aceess images\n","imagePaths=sorted(list(paths.list_images('sports-video')))\n","len(imagePaths)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2070"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"8QL2YCogiTt-"},"source":["random.seed(42)\n","random.shuffle(imagePaths)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aUYti3tJiXyl","executionInfo":{"elapsed":398097,"status":"ok","timestamp":1622094486580,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"},"user_tz":-330},"outputId":"7831c16e-5b87-470f-d021-cf9cb6bb36fb"},"source":["#loop over the images\n","for imagePath in imagePaths:\n","  image=cv2.imread(imagePath)    #read each images\n","  image=cv2.resize(image, (28,28))  #image resizing\n","  image=img_to_array(image)\n","  data.append(image)\n","\n","#seprate labels from images\n","  label = imagePath.split(os.path.sep)[-2]\n","  if label == \"football\":\n","    label = 0\n","  elif label == \"tennis\":\n","    label = 1\n","  else :\n","    label = 2\n","  labels.append(label)\n","print(\"[INFO] Created\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[INFO] Created\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_XML2gC_vAqj"},"source":["labels"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SIVUfHtnuvC6","executionInfo":{"elapsed":389,"status":"ok","timestamp":1622094510141,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"},"user_tz":-330},"outputId":"3d045ee5-cbed-48ae-93d8-a99e982b3081"},"source":["len(labels)== len(data)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"ZqgCKi1ZvDOU"},"source":["# scale the raw pixel intensities to the range [0, 1]\n","data= np.array(data, dtype=\"float\") / 255.0\n","labels=np.array(labels)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"H1rkqpC5vZQ0"},"source":["# partition the data into training and testing splits using 75% of\n","# the data for training and the remaining 25% for testing\n","\n","(trainX ,testX , trainY , testY) = train_test_split(data, labels, test_size =0.25 ,random_state=42)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ix61XFdiwGKt"},"source":["# convert the labels from integers to vectors\n","trainY = to_categorical(trainY, num_classes=3)\n","testY = to_categorical(testY, num_classes=3)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qYI0GMbWwQkA"},"source":["# construct the image generator for data augmentation\n","aug= ImageDataGenerator(rotation_range= 30, width_shift_range= 0.1,\n","    height_shift_range= 0.1, shear_range=0.2, zoom_range=0.2,\n","\t  horizontal_flip=True, fill_mode=\"nearest\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cdDCaJD1w-zN","executionInfo":{"elapsed":400,"status":"ok","timestamp":1622094605515,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"},"user_tz":-330},"outputId":"9e5c9598-374b-45f4-ebbd-cb4720f68b9c"},"source":["#the model\n","print(\"[INFO] compiling the model.....\")\n","model=LeNet.build(width=28,height=28,depth=3 ,classes=3)\n","opt = Adam(learning_rate=INIT_LR, decay=INIT_LR / EPOCHS)\n","#compiling model\n","model.compile(loss=\"categorical_crossentropy\",  optimizer=opt, metrics=[\"accuracy\"])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[INFO] compiling the model.....\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"foPh5vQ7x5wJ","executionInfo":{"elapsed":190975,"status":"ok","timestamp":1622094803900,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"},"user_tz":-330},"outputId":"15cccb20-0a08-4baa-923b-144eb628b83a"},"source":["#train the network\n","print(\"[INFO] training to network\")\n","H=model.fit(x=aug.flow(trainX, trainY ,batch_size=25), validation_data=(testX ,testY), \n","            steps_per_epoch= len(trainX) // BS, epochs=EPOCHS, verbose=1)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[INFO] training to network\n","Epoch 1/150\n","62/62 [==============================] - 32s 19ms/step - loss: 0.8672 - accuracy: 0.5783 - val_loss: 0.7520 - val_accuracy: 0.6371\n","Epoch 2/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.6568 - accuracy: 0.7250 - val_loss: 0.6356 - val_accuracy: 0.7587\n","Epoch 3/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.6450 - accuracy: 0.7322 - val_loss: 0.6506 - val_accuracy: 0.7529\n","Epoch 4/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.6360 - accuracy: 0.7308 - val_loss: 0.5807 - val_accuracy: 0.7741\n","Epoch 5/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5559 - accuracy: 0.7773 - val_loss: 0.5950 - val_accuracy: 0.7645\n","Epoch 6/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5486 - accuracy: 0.7898 - val_loss: 0.5613 - val_accuracy: 0.7896\n","Epoch 7/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5341 - accuracy: 0.7878 - val_loss: 0.6354 - val_accuracy: 0.7394\n","Epoch 8/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5115 - accuracy: 0.7990 - val_loss: 0.5197 - val_accuracy: 0.7954\n","Epoch 9/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.5257 - accuracy: 0.7976 - val_loss: 0.5190 - val_accuracy: 0.8031\n","Epoch 10/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4909 - accuracy: 0.8127 - val_loss: 0.5839 - val_accuracy: 0.7625\n","Epoch 11/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4731 - accuracy: 0.8160 - val_loss: 0.5022 - val_accuracy: 0.8050\n","Epoch 12/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4382 - accuracy: 0.8265 - val_loss: 0.5012 - val_accuracy: 0.7954\n","Epoch 13/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4586 - accuracy: 0.8291 - val_loss: 0.5399 - val_accuracy: 0.7973\n","Epoch 14/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4288 - accuracy: 0.8291 - val_loss: 0.5151 - val_accuracy: 0.8031\n","Epoch 15/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4357 - accuracy: 0.8356 - val_loss: 0.5092 - val_accuracy: 0.8243\n","Epoch 16/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4293 - accuracy: 0.8441 - val_loss: 0.5797 - val_accuracy: 0.7838\n","Epoch 17/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3991 - accuracy: 0.8363 - val_loss: 0.6577 - val_accuracy: 0.7722\n","Epoch 18/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.4120 - accuracy: 0.8441 - val_loss: 0.5408 - val_accuracy: 0.7934\n","Epoch 19/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4083 - accuracy: 0.8454 - val_loss: 0.5529 - val_accuracy: 0.8108\n","Epoch 20/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4086 - accuracy: 0.8435 - val_loss: 0.5058 - val_accuracy: 0.8031\n","Epoch 21/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3612 - accuracy: 0.8684 - val_loss: 0.5110 - val_accuracy: 0.8185\n","Epoch 22/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3726 - accuracy: 0.8533 - val_loss: 0.5178 - val_accuracy: 0.8089\n","Epoch 23/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3381 - accuracy: 0.8703 - val_loss: 0.5023 - val_accuracy: 0.8147\n","Epoch 24/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.3997 - accuracy: 0.8402 - val_loss: 0.4848 - val_accuracy: 0.8089\n","Epoch 25/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3740 - accuracy: 0.8527 - val_loss: 0.5682 - val_accuracy: 0.7992\n","Epoch 26/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3507 - accuracy: 0.8592 - val_loss: 0.5167 - val_accuracy: 0.8108\n","Epoch 27/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3726 - accuracy: 0.8618 - val_loss: 0.5174 - val_accuracy: 0.7992\n","Epoch 28/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.3517 - accuracy: 0.8684 - val_loss: 0.5677 - val_accuracy: 0.7992\n","Epoch 29/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.4230 - accuracy: 0.8487 - val_loss: 0.5127 - val_accuracy: 0.8050\n","Epoch 30/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3252 - accuracy: 0.8690 - val_loss: 0.5020 - val_accuracy: 0.8185\n","Epoch 31/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3365 - accuracy: 0.8618 - val_loss: 0.5796 - val_accuracy: 0.8069\n","Epoch 32/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2888 - accuracy: 0.8847 - val_loss: 0.4901 - val_accuracy: 0.8263\n","Epoch 33/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3125 - accuracy: 0.8775 - val_loss: 0.5286 - val_accuracy: 0.7973\n","Epoch 34/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3245 - accuracy: 0.8828 - val_loss: 0.4871 - val_accuracy: 0.8224\n","Epoch 35/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3006 - accuracy: 0.8841 - val_loss: 0.5266 - val_accuracy: 0.7838\n","Epoch 36/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2961 - accuracy: 0.8880 - val_loss: 0.5539 - val_accuracy: 0.8031\n","Epoch 37/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2873 - accuracy: 0.8939 - val_loss: 0.6124 - val_accuracy: 0.7954\n","Epoch 38/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.3076 - accuracy: 0.8887 - val_loss: 0.4928 - val_accuracy: 0.8127\n","Epoch 39/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2544 - accuracy: 0.8972 - val_loss: 0.5579 - val_accuracy: 0.7857\n","Epoch 40/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2517 - accuracy: 0.9050 - val_loss: 0.6125 - val_accuracy: 0.7992\n","Epoch 41/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2720 - accuracy: 0.8952 - val_loss: 0.6456 - val_accuracy: 0.7606\n","Epoch 42/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.3123 - accuracy: 0.8671 - val_loss: 0.6092 - val_accuracy: 0.8050\n","Epoch 43/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2516 - accuracy: 0.9005 - val_loss: 0.5560 - val_accuracy: 0.7896\n","Epoch 44/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2522 - accuracy: 0.9024 - val_loss: 0.5445 - val_accuracy: 0.7876\n","Epoch 45/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2266 - accuracy: 0.9162 - val_loss: 0.5924 - val_accuracy: 0.8012\n","Epoch 46/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2362 - accuracy: 0.9077 - val_loss: 0.5578 - val_accuracy: 0.8320\n","Epoch 47/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.2294 - accuracy: 0.9129 - val_loss: 0.5818 - val_accuracy: 0.8166\n","Epoch 48/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2340 - accuracy: 0.9018 - val_loss: 0.5394 - val_accuracy: 0.8012\n","Epoch 49/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.2631 - accuracy: 0.9057 - val_loss: 0.6092 - val_accuracy: 0.7857\n","Epoch 50/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2307 - accuracy: 0.9057 - val_loss: 0.6095 - val_accuracy: 0.7876\n","Epoch 51/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2585 - accuracy: 0.8926 - val_loss: 0.5843 - val_accuracy: 0.8012\n","Epoch 52/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2237 - accuracy: 0.9181 - val_loss: 0.6291 - val_accuracy: 0.8185\n","Epoch 53/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2018 - accuracy: 0.9273 - val_loss: 0.6594 - val_accuracy: 0.7838\n","Epoch 54/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2272 - accuracy: 0.9142 - val_loss: 0.6582 - val_accuracy: 0.8263\n","Epoch 55/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2231 - accuracy: 0.9122 - val_loss: 0.5992 - val_accuracy: 0.8069\n","Epoch 56/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2172 - accuracy: 0.9201 - val_loss: 0.6033 - val_accuracy: 0.7992\n","Epoch 57/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2083 - accuracy: 0.9221 - val_loss: 0.5826 - val_accuracy: 0.8185\n","Epoch 58/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1843 - accuracy: 0.9253 - val_loss: 0.7237 - val_accuracy: 0.8012\n","Epoch 59/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.2049 - accuracy: 0.9168 - val_loss: 0.6945 - val_accuracy: 0.7857\n","Epoch 60/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2099 - accuracy: 0.9181 - val_loss: 0.6896 - val_accuracy: 0.8127\n","Epoch 61/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1950 - accuracy: 0.9273 - val_loss: 0.6191 - val_accuracy: 0.8147\n","Epoch 62/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2033 - accuracy: 0.9175 - val_loss: 0.6229 - val_accuracy: 0.8089\n","Epoch 63/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1863 - accuracy: 0.9332 - val_loss: 0.6878 - val_accuracy: 0.7973\n","Epoch 64/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1687 - accuracy: 0.9371 - val_loss: 0.6429 - val_accuracy: 0.8108\n","Epoch 65/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1635 - accuracy: 0.9299 - val_loss: 0.6682 - val_accuracy: 0.8147\n","Epoch 66/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1855 - accuracy: 0.9286 - val_loss: 0.6197 - val_accuracy: 0.8166\n","Epoch 67/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1531 - accuracy: 0.9483 - val_loss: 0.6236 - val_accuracy: 0.8205\n","Epoch 68/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1566 - accuracy: 0.9404 - val_loss: 0.6558 - val_accuracy: 0.8166\n","Epoch 69/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1945 - accuracy: 0.9299 - val_loss: 0.6757 - val_accuracy: 0.7876\n","Epoch 70/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1581 - accuracy: 0.9437 - val_loss: 0.6505 - val_accuracy: 0.8282\n","Epoch 71/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1909 - accuracy: 0.9299 - val_loss: 0.6727 - val_accuracy: 0.8398\n","Epoch 72/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1701 - accuracy: 0.9417 - val_loss: 0.5632 - val_accuracy: 0.8243\n","Epoch 73/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1623 - accuracy: 0.9371 - val_loss: 0.8098 - val_accuracy: 0.8205\n","Epoch 74/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1639 - accuracy: 0.9424 - val_loss: 0.7042 - val_accuracy: 0.8012\n","Epoch 75/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1989 - accuracy: 0.9234 - val_loss: 0.6383 - val_accuracy: 0.8127\n","Epoch 76/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1921 - accuracy: 0.9358 - val_loss: 0.6352 - val_accuracy: 0.8185\n","Epoch 77/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1498 - accuracy: 0.9456 - val_loss: 0.6636 - val_accuracy: 0.7857\n","Epoch 78/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1920 - accuracy: 0.9319 - val_loss: 0.6896 - val_accuracy: 0.8050\n","Epoch 79/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1692 - accuracy: 0.9345 - val_loss: 0.6569 - val_accuracy: 0.8320\n","Epoch 80/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1373 - accuracy: 0.9476 - val_loss: 0.7031 - val_accuracy: 0.8050\n","Epoch 81/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1683 - accuracy: 0.9404 - val_loss: 0.6212 - val_accuracy: 0.8147\n","Epoch 82/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1455 - accuracy: 0.9509 - val_loss: 0.6337 - val_accuracy: 0.8031\n","Epoch 83/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1288 - accuracy: 0.9509 - val_loss: 0.6597 - val_accuracy: 0.8243\n","Epoch 84/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1349 - accuracy: 0.9437 - val_loss: 0.6485 - val_accuracy: 0.8243\n","Epoch 85/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1440 - accuracy: 0.9535 - val_loss: 0.7445 - val_accuracy: 0.8089\n","Epoch 86/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1362 - accuracy: 0.9456 - val_loss: 0.7174 - val_accuracy: 0.8108\n","Epoch 87/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1573 - accuracy: 0.9345 - val_loss: 0.7578 - val_accuracy: 0.8224\n","Epoch 88/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1560 - accuracy: 0.9404 - val_loss: 0.6602 - val_accuracy: 0.8205\n","Epoch 89/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1157 - accuracy: 0.9548 - val_loss: 0.8362 - val_accuracy: 0.7857\n","Epoch 90/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1452 - accuracy: 0.9496 - val_loss: 0.6355 - val_accuracy: 0.8378\n","Epoch 91/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1207 - accuracy: 0.9528 - val_loss: 0.7298 - val_accuracy: 0.8263\n","Epoch 92/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1284 - accuracy: 0.9548 - val_loss: 0.6559 - val_accuracy: 0.8108\n","Epoch 93/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1321 - accuracy: 0.9555 - val_loss: 0.7268 - val_accuracy: 0.8127\n","Epoch 94/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1240 - accuracy: 0.9561 - val_loss: 0.7887 - val_accuracy: 0.8089\n","Epoch 95/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1484 - accuracy: 0.9450 - val_loss: 0.7068 - val_accuracy: 0.8127\n","Epoch 96/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1485 - accuracy: 0.9450 - val_loss: 0.6654 - val_accuracy: 0.7973\n","Epoch 97/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1271 - accuracy: 0.9581 - val_loss: 0.6566 - val_accuracy: 0.8050\n","Epoch 98/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1370 - accuracy: 0.9476 - val_loss: 0.7772 - val_accuracy: 0.8050\n","Epoch 99/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1052 - accuracy: 0.9607 - val_loss: 0.6989 - val_accuracy: 0.8185\n","Epoch 100/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.2196 - accuracy: 0.9240 - val_loss: 0.6362 - val_accuracy: 0.8378\n","Epoch 101/150\n","62/62 [==============================] - 1s 15ms/step - loss: 0.1342 - accuracy: 0.9496 - val_loss: 0.6316 - val_accuracy: 0.8340\n","Epoch 102/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1357 - accuracy: 0.9509 - val_loss: 0.7066 - val_accuracy: 0.8108\n","Epoch 103/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1080 - accuracy: 0.9568 - val_loss: 0.7964 - val_accuracy: 0.8224\n","Epoch 104/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1343 - accuracy: 0.9581 - val_loss: 0.6695 - val_accuracy: 0.8224\n","Epoch 105/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0998 - accuracy: 0.9607 - val_loss: 0.7794 - val_accuracy: 0.8166\n","Epoch 106/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1029 - accuracy: 0.9614 - val_loss: 0.7282 - val_accuracy: 0.8050\n","Epoch 107/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1196 - accuracy: 0.9561 - val_loss: 0.7294 - val_accuracy: 0.8224\n","Epoch 108/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1253 - accuracy: 0.9515 - val_loss: 0.6887 - val_accuracy: 0.8147\n","Epoch 109/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1492 - accuracy: 0.9483 - val_loss: 0.6614 - val_accuracy: 0.8069\n","Epoch 110/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1372 - accuracy: 0.9522 - val_loss: 0.6648 - val_accuracy: 0.8263\n","Epoch 111/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0831 - accuracy: 0.9673 - val_loss: 0.6943 - val_accuracy: 0.8127\n","Epoch 112/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0841 - accuracy: 0.9614 - val_loss: 0.8504 - val_accuracy: 0.8012\n","Epoch 113/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1006 - accuracy: 0.9587 - val_loss: 0.7456 - val_accuracy: 0.8301\n","Epoch 114/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1165 - accuracy: 0.9542 - val_loss: 0.8061 - val_accuracy: 0.8089\n","Epoch 115/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0942 - accuracy: 0.9653 - val_loss: 0.9387 - val_accuracy: 0.8012\n","Epoch 116/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1128 - accuracy: 0.9633 - val_loss: 0.7264 - val_accuracy: 0.8147\n","Epoch 117/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0962 - accuracy: 0.9587 - val_loss: 0.8105 - val_accuracy: 0.8031\n","Epoch 118/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1104 - accuracy: 0.9587 - val_loss: 0.7738 - val_accuracy: 0.8031\n","Epoch 119/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0968 - accuracy: 0.9686 - val_loss: 0.8236 - val_accuracy: 0.8147\n","Epoch 120/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0806 - accuracy: 0.9725 - val_loss: 0.8303 - val_accuracy: 0.8185\n","Epoch 121/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0960 - accuracy: 0.9679 - val_loss: 0.7798 - val_accuracy: 0.8224\n","Epoch 122/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0898 - accuracy: 0.9673 - val_loss: 0.7952 - val_accuracy: 0.8243\n","Epoch 123/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0793 - accuracy: 0.9725 - val_loss: 0.8760 - val_accuracy: 0.8166\n","Epoch 124/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0932 - accuracy: 0.9653 - val_loss: 0.8815 - val_accuracy: 0.8147\n","Epoch 125/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0915 - accuracy: 0.9653 - val_loss: 0.7935 - val_accuracy: 0.8263\n","Epoch 126/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0947 - accuracy: 0.9627 - val_loss: 0.9242 - val_accuracy: 0.7992\n","Epoch 127/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1004 - accuracy: 0.9620 - val_loss: 0.8462 - val_accuracy: 0.8301\n","Epoch 128/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0781 - accuracy: 0.9731 - val_loss: 0.9968 - val_accuracy: 0.7915\n","Epoch 129/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0920 - accuracy: 0.9686 - val_loss: 0.8474 - val_accuracy: 0.8147\n","Epoch 130/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1421 - accuracy: 0.9528 - val_loss: 0.8685 - val_accuracy: 0.8127\n","Epoch 131/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0974 - accuracy: 0.9640 - val_loss: 0.7393 - val_accuracy: 0.8069\n","Epoch 132/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0911 - accuracy: 0.9607 - val_loss: 0.8645 - val_accuracy: 0.8012\n","Epoch 133/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0877 - accuracy: 0.9699 - val_loss: 0.8996 - val_accuracy: 0.8050\n","Epoch 134/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.1001 - accuracy: 0.9607 - val_loss: 0.8222 - val_accuracy: 0.7915\n","Epoch 135/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0879 - accuracy: 0.9673 - val_loss: 0.8002 - val_accuracy: 0.7973\n","Epoch 136/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0849 - accuracy: 0.9751 - val_loss: 0.8074 - val_accuracy: 0.8263\n","Epoch 137/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1073 - accuracy: 0.9620 - val_loss: 0.6591 - val_accuracy: 0.8089\n","Epoch 138/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1582 - accuracy: 0.9450 - val_loss: 0.8763 - val_accuracy: 0.8301\n","Epoch 139/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1914 - accuracy: 0.9293 - val_loss: 0.7460 - val_accuracy: 0.8031\n","Epoch 140/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.1240 - accuracy: 0.9515 - val_loss: 0.7212 - val_accuracy: 0.8069\n","Epoch 141/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0978 - accuracy: 0.9653 - val_loss: 0.7715 - val_accuracy: 0.8108\n","Epoch 142/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0728 - accuracy: 0.9745 - val_loss: 0.7936 - val_accuracy: 0.8108\n","Epoch 143/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0726 - accuracy: 0.9745 - val_loss: 0.8295 - val_accuracy: 0.8166\n","Epoch 144/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0858 - accuracy: 0.9686 - val_loss: 0.9596 - val_accuracy: 0.7954\n","Epoch 145/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0844 - accuracy: 0.9686 - val_loss: 0.8104 - val_accuracy: 0.8166\n","Epoch 146/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0886 - accuracy: 0.9705 - val_loss: 0.9627 - val_accuracy: 0.7915\n","Epoch 147/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0629 - accuracy: 0.9777 - val_loss: 0.8568 - val_accuracy: 0.7992\n","Epoch 148/150\n","62/62 [==============================] - 1s 14ms/step - loss: 0.0861 - accuracy: 0.9659 - val_loss: 0.9471 - val_accuracy: 0.7954\n","Epoch 149/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0784 - accuracy: 0.9705 - val_loss: 0.9235 - val_accuracy: 0.8069\n","Epoch 150/150\n","62/62 [==============================] - 1s 13ms/step - loss: 0.0924 - accuracy: 0.9666 - val_loss: 0.8295 - val_accuracy: 0.7934\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Nf_wlXY8zP1B","executionInfo":{"elapsed":1104,"status":"ok","timestamp":1622094822734,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"},"user_tz":-330},"outputId":"a86e2fc5-0f87-4aaf-cb8f-b40a3e7782ea"},"source":["print(\"[INFO] serializing network...\")\n","model.save(\"sports_video.model\", save_format=\"h5\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[INFO] serializing network...\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M0cALixmzQcK","executionInfo":{"elapsed":414,"status":"ok","timestamp":1622094825775,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"},"user_tz":-330},"outputId":"6df06e65-faa2-401a-80ee-bb8a9be733de"},"source":["accuracy = model.evaluate(testX, testY, verbose=0)    #accuracy\n","accuracy[1] "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7934362888336182"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":298},"id":"f7S-FuCV4pOG","executionInfo":{"elapsed":860,"status":"ok","timestamp":1622094850497,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"},"user_tz":-330},"outputId":"3d842d54-5d6c-46ae-e24d-a16dc425978d"},"source":["plt.style.use(\"ggplot\")\n","plt.figure()\n","N = EPOCHS\n","plt.plot(np.arange(0, N), H.history[\"loss\"], label=\"train_loss\")\n","plt.plot(np.arange(0, N), H.history[\"val_loss\"], label=\"val_loss\")\n","plt.plot(np.arange(0, N), H.history[\"accuracy\"], label=\"train_acc\")\n","plt.plot(np.arange(0, N), H.history[\"val_accuracy\"], label=\"val_acc\")\n","plt.title(\"Training Loss and Accuracy on sports_video\")\n","plt.xlabel(\"Epoch #\")\n","plt.ylabel(\"Loss/Accuracy\")\n","plt.legend(loc=\"lower left\")\n","plt.savefig(\"plot_new1.png\")"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"8CtRLnvoJwnq"},"source":["%cd '/content/MyDrive/MyDrive/sports_video_classification/video_frames'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UbvMZm7SqUq1","executionInfo":{"status":"ok","timestamp":1623122859577,"user_tz":-330,"elapsed":10,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"}},"outputId":"9ea2440b-22ee-40d9-d372-e9736252f431"},"source":["%cd '/content/MyDrive/MyDrive/Jrs'"],"execution_count":6,"outputs":[{"output_type":"stream","text":["/content/MyDrive/MyDrive/Jrs\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"-0aZjqZFIC_M"},"source":["**Uploaded video converted to frames**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hkmt5NGqH2-z","executionInfo":{"status":"ok","timestamp":1623122928628,"user_tz":-330,"elapsed":31331,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"}},"outputId":"3669683d-8e06-4750-afb3-0c4f6ec00f65"},"source":["import cv2\n","vidcap = cv2.VideoCapture('/content/MyDrive/MyDrive/Jrs/196816294_3054125141485758_8284834281064122412_n.mp4')\n","def getFrame(sec):\n","    vidcap.set(cv2.CAP_PROP_POS_MSEC,sec*1000)\n","    hasFrames,image = vidcap.read()\n","    if hasFrames:\n","        cv2.imwrite(\"image\"+str(count)+\".jpg\", image)     # save frame as JPG file\n","    return hasFrames\n","sec = 0\n","frameRate = 0.2 #//it will capture image in each 0.5 second\n","count=1\n","success = getFrame(sec)\n","while success:\n","    count = count + 1\n","    sec = sec + frameRate\n","    sec = round(sec, 2)\n","    success = getFrame(sec)\n","print(\"Process Completed\")"],"execution_count":7,"outputs":[{"output_type":"stream","text":["Process Completed\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0WI4la7oqHhk","executionInfo":{"status":"ok","timestamp":1623122821439,"user_tz":-330,"elapsed":487,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"}},"outputId":"4b33f052-0bc6-4ed9-8323-2abe7f87a522"},"source":["%cd '/content/MyDrive/MyDrive/Jrs'"],"execution_count":4,"outputs":[{"output_type":"stream","text":["/content/MyDrive/MyDrive/Jrs\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"MT9C7e-dImG3"},"source":["**Take a frame and uploaded to model**"]},{"cell_type":"code","metadata":{"id":"MDctNibW4zx9","executionInfo":{"status":"ok","timestamp":1623122825854,"user_tz":-330,"elapsed":1142,"user":{"displayName":"suhair k","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GibZDqEeLGqPPX4HSqi-r9FlC4y2Nd9Irtm6kcviQ=s64","userId":"13348573712835833769"}}},"source":["from tensorflow.keras.preprocessing.image import img_to_array\n","from tensorflow.keras.models import load_model\n","from google.colab.patches import cv2_imshow\n","import numpy as np\n","import argparse\n","import imutils\n","import cv2"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"bkfHKfGs4058"},"source":["def image_classifier(filename):\n","  image = cv2.imread(filename)\n","  orig = image.copy()\n","  image = cv2.resize(image, (28, 28))\n","  image = image.astype(\"float\") / 255.0\n","  image = img_to_array(image)\n","  image = np.expand_dims(image, axis=0)\n","  #print(\"[INFO] loading network...\")\n","  model = load_model(\"/content/MyDrive/MyDrive/sports_video_classification/sports_video.model\")\n","  (football, tennis, weight_lifting) = model.predict(image)[0]\n","  # build the label\n","  if football > tennis and football > weight_lifting:\n","    label =\"football detected\" \n"," \n","  elif tennis > football and tennis > weight_lifting:\n","    label=\"tennis detected\"\n","\n","  #if pituitary_tumor > glioma_tumor and pituitary_tumor > meningioma_tumor :\n","  else:\n","    label =\"weight_lifting detected\"\n","\n","  label = \"{}\".format(label)\n","  print(label)\n","  # draw the label on the image\n","  output = imutils.resize(orig, width=400)\n","  cv2.putText(output, label, (10, 25),  cv2.FONT_HERSHEY_SIMPLEX,\n","\t0.7, (0, 0, 255), 2)\n","  cv2_imshow(output)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Vi2wl2d3KcID"},"source":["image_classifier(\"image15.jpg\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xP2Il_9Ag_JI"},"source":["import cv2\n","vidcap = cv2.VideoCapture('/content/MyDrive/MyDrive/sports_video_classification/test/football-vid.mp4')\n","def getFrame(sec):\n","    vidcap.set(cv2.CAP_PROP_POS_MSEC,sec*1000)\n","    hasFrames,image = vidcap.read()\n","    if hasFrames:\n","        cv2.imwrite(\"image\"+str(count)+\".jpg\", image)     # save frame as JPG file\n","    return hasFrames\n","sec = 0\n","frameRate = 1 #//it will capture image in each 0.5 second\n","count=1\n","success = getFrame(sec)\n","while success:\n","    count = count + 1\n","    sec = sec + frameRate\n","    sec = round(sec, 2)\n","    success = getFrame(sec)"],"execution_count":null,"outputs":[]}]}